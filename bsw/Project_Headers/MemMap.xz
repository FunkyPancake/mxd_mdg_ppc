
#ifdef START_SEC_VAR_8BIT
#undef START_SEC_VAR_8BIT
#define SECTION_VAR_START
#define push
#pragma options align = power
#pragma pack(1)
#pragma section all_types ".data_8bit" \
                          ".data_8bit"
#endif

#ifdef START_SEC_VAR_16BIT
#undef START_SEC_VAR_16BIT
#define SECTION_VAR_START
#define push
#pragma options align = 2
#pragma pack(2)
#pragma section all_types ".data_16bit" \
                          ".data_16bit"
#endif

#ifdef START_SEC_VAR_32BIT
#define SECTION_VAR_START
#define push
#pragma pack(4)
#pragma section all_types ".data_32bit" \
                          ".data_32bit"
#endif

#ifdef START_SEC_VAR_UNSPECIFIED
#define SECTION_VAR_START
#define push
#pragma section all_types ".data_unspecified" \
                          ".data_unspecified"
#endif

#ifdef STOP_SEC_VAR_8BIT
#undef SECTION_VAR_START
#pragma pop
#endif

#ifdef STOP_SEC_VAR_16BIT
#undef SECTION_VAR_START
#pragma pop
#endif

#ifdef STOP_SEC_VAR_32BIT
#undef SECTION_VAR_START
#pragma pop
#endif

#ifdef STOP_SEC_VAR_UNSPECIFIED
#undef SECTION_VAR_START
#pragma pop
#endif

//Uninitialized variables

#ifdef START_SEC_VAR_NOINIT_8BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".data_noinit_8bit"
#endif

#ifdef START_SEC_VAR_NOINIT_16BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".data_noinit_16bit"
#endif

#ifdef START_SEC_VAR_NOINIT_32BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".data_noinit_32bit"
#endif

#ifdef START_SEC_VAR_NOINIT_UNSPECIFIED
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".data_noinit_unspecified"
#endif

#ifdef STOP_SEC_VAR_NOINIT_8BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_NOINIT_16BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_NOINIT_32BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_NOINIT_UNSPECIFIED
#pragma pop
#endif

//Calibration

#ifdef START_SEC_CAL_8BIT
#undef START_SEC_CAL_8BIT
#pragma options align = power
#pragma pack(1)
#define SECTION_VA_START
#define push
#pragma section all_types ".cal_8bit" \
                          ".cal_8bit"
#endif

#ifdef START_SEC_CAL_16BIT
#undef START_SEC_CAL_16BIT
#pragma options align = power
#pragma pack(2)
#define SECTION_VA_START
#define push
#pragma section all_types ".cal_16bit" \
                          ".cal_16bit"
#endif

#ifdef START_SEC_CAL_32BIT
#undef START_SEC_CAL_32BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".cal_32bit" \
                          ".cal_32bit"
#endif

#ifdef START_SEC_CAL_UNSPECIFIED
#undef START_SEC_CAL_UNSPECIFIED
#define SECTION_VA_START
#define push
#pragma section all_types ".cal_unspecified" \
                          ".cal_unspecified"
#endif

#ifdef STOP_SEC_CAL_8BIT
#undef STOP_SEC_CAL_8BIT
#pragma pop
#endif

#ifdef STOP_SEC_CAL_16BIT
#undef STOP_SEC_CAL_16BIT
#pragma pop
#endif

#ifdef STOP_SEC_CAL_32BIT
#undef STOP_SEC_CAL_32BIT
#pragma pop
#endif

#ifdef STOP_SEC_CAL_UNSPECIFIED
#undef STOP_SEC_CAL_UNSPECIFIED
#pragma pop
#endif
//Fast variables (XCP accessed)

#ifdef START_SEC_VAR_FAST_8BIT
#undef START_SEC_VAR_FAST_8BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".fast_8bit"
#endif

#ifdef START_SEC_VAR_FAST_16BIT
#undef START_SEC_VAR_FAST_16BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".fast_16bit"
#endif

#ifdef START_SEC_VAR_FAST_32BIT
#undef START_SEC_VAR_FAST_32BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".fast_32bit"
#endif

#ifdef START_SEC_VAR_FAST_UNSPECIFIED
#undef START_SEC_VAR_FAST_UNSPECIFIED
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".fast_unspecified"
#endif

#ifdef STOP_SEC_VAR_FAST_8BIT
#undef STOP_SEC_VAR_FAST_8BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_FAST_16BIT
#undef STOP_SEC_VAR_FAST_16BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_FAST_32BIT
#undef STOP_SEC_VAR_FAST_32BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_FAST_UNSPECIFIED
#undef STOP_SEC_VAR_FAST_UNSPECIFIED
#pragma pop
#endif

// //Non-volatile varaibles

#ifdef START_SEC_VAR_STBY_8BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".stby_8bit"
#endif

#ifdef START_SEC_VAR_STBY_16BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".stby_16bit"
#endif

#ifdef START_SEC_VAR_STBY_32BIT
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".stby_32bit"
#endif

#ifdef START_SEC_VAR_STBY_UNSPECIFIED
#define SECTION_VA_START
#define push
#pragma section all_types ".data" \
                          ".stby_unspecified"
#endif

#ifdef STOP_SEC_VAR_STBY_8BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_STBY_16BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_STBY_32BIT
#pragma pop
#endif

#ifdef STOP_SEC_VAR_STBY_UNSPECIFIED
#pragma pop
#endif

//Code

#ifdef ASW_START_SEC_CODE
#define SECTION_VA_START
#define push
#pragma section all_types ".text" \
                          ".text_vle"
#ifdef ASW_STOP_SEC_CODE
#pragma pop
